find_library(PARI pari HINTS /usr/local/lib)
find_library(RELIC relic HINTS /usr/local/lib)
find_library(GMP gmp HINTS /usr/loca/lib)
find_library(ZMQ zmq HINTS /usr/loca/lib)
if(APPLE)
find_library(OMP omp HINTS /usr/local/lib /usr/lib)
endif()
if(APPLE)
add_executable(sender sender.c util.c vector.c)
target_link_libraries(sender ${OMP} ${PARI} ${RELIC} ${GMP} ${ZMQ})
add_executable(receiver receiver.c util.c vector.c)
target_link_libraries(receiver ${OMP} ${PARI} ${RELIC} ${GMP} ${ZMQ})
add_executable(intermediary intermediary.c util.c vector.c)
target_link_libraries(intermediary ${OMP} ${PARI} ${RELIC} ${GMP} ${ZMQ})
add_executable(bench bench.c cmdline.c util.c vector.c)
target_link_libraries(bench ${OMP} ${PARI} ${RELIC} ${GMP})
else()
add_executable(sender sender.c util.c vector.c)
target_link_libraries(sender ${PARI} ${RELIC} ${GMP} ${ZMQ})
add_executable(receiver receiver.c util.c vector.c)
target_link_libraries(receiver ${PARI} ${RELIC} ${GMP} ${ZMQ})
add_executable(intermediary intermediary.c util.c vector.c)
target_link_libraries(intermediary ${PARI} ${RELIC} ${GMP} ${ZMQ})
add_executable(bench bench.c cmdline.c util.c vector.c)
target_link_libraries(bench ${PARI} ${RELIC} ${GMP})
endif()
add_executable(graph graph.c vector.c)
target_link_libraries(graph m)
add_executable(wrapper wrapper.c)